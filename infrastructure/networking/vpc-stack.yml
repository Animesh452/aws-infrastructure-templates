AWSTemplateFormatVersion: '2010-09-09'
Description: 'Networking Foundation - VPC, Subnets, Internet Gateway, Route Tables'

Parameters:
  Environment:
    Type: String
    Description: Environment name (dev, test, prod)
    Default: dev
    AllowedValues: [dev, test, prod]
  
  VpcCidr:
    Type: String
    Description: CIDR block for VPC
    Default: 10.0.0.0/16
    
  PublicSubnetCidr:
    Type: String
    Description: CIDR block for public subnet
    Default: 10.0.1.0/24
    
  PrivateSubnetCidr:
    Type: String
    Description: CIDR block for private subnet
    Default: 10.0.2.0/24

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-vpc"
        - Key: Environment
          Value: !Ref Environment

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-igw"
        - Key: Environment
          Value: !Ref Environment

  # Attach Internet Gateway to VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-public-subnet"
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Public

  # Private Subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnetCidr
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-private-subnet"
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Private

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-public-rt"
        - Key: Environment
          Value: !Ref Environment

  # Default Public Route
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Associate Public Subnet with Public Route Table
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-private-rt"
        - Key: Environment
          Value: !Ref Environment

  # Associate Private Subnet with Private Route Table
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

Outputs:
  VpcId:
    Description: ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${Environment}-VpcId"

  PublicSubnetId:
    Description: ID of the public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${Environment}-PublicSubnetId"

  PrivateSubnetId:
    Description: ID of the private subnet
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub "${Environment}-PrivateSubnetId"

  InternetGatewayId:
    Description: ID of the Internet Gateway
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${Environment}-InternetGatewayId"

  VpcCidr:
    Description: CIDR block of the VPC
    Value: !Ref VpcCidr
    Export:
      Name: !Sub "${Environment}-VpcCidr"